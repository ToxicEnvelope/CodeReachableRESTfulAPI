{
	"info": {
		"_postman_id": "22e32827-1d56-45f3-af95-22b76b14bf38",
		"name": "CodeReachable RESTful API Sanity",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users Resource",
			"description": "",
			"item": [
				{
					"name": "GET all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e36e908b-2e87-41cd-9de8-415c3bf308b8",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect 200 OK\", function () {",
									"    var resObj = pm.response;",
									"    if (resObj.to.have.status(200)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"    } else {",
									"        console.log(\"FAIL : \" + resObj.code)",
									"    }",
									"});",
									"// Expect NOT EMPTY Response",
									"pm.test(\"Expect Users In Response\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var users = jsonBody;",
									"    if (pm.expect(users.length).to.be.not.equals(0)) { ",
									"        console.log(\"LENGTH : \" + users.length);",
									"        console.log(users);",
									"    } else {",
									"        console.log(\"FAIL : \" + users.length);",
									"        console.log(jsonBody);",
									"    }",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7bbd6a84-b23c-4124-8fc7-f9fb0e11fb64",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user by id - 404 Not Found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e3dbae0f-c3ba-465d-89aa-2f8de086f903",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "75d45e25-2e95-4bc4-ac27-9cee0c38b632",
								"type": "text/javascript",
								"exec": [
									"// Check for 404",
									"pm.test(\"Expect 404 Not Found\", function () {",
									"    ",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(404)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(resObj);",
									"    } else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(resObj);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/{{userIdInvalid}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"{{userIdInvalid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user by id - 200 OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee6d5a20-dba8-4b27-b1c5-811c6b78d6d1",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect 200 OK\", function () {",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(200)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(resObj);",
									"    } else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(resObj);",
									"    }",
									"});",
									"// Expect NOT EMPTY Response",
									"pm.test(\"Expect Users In Response\", function () {",
									"    pm.response.to.not.be.empty;",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ca76e45e-dc6a-4286-8126-58daeb501138",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/{{userId}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user course list data - 200 OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "572b95b4-9040-459e-bcea-f18ba4a6a3d0",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect 200 OK\", function () {",
									"    console.log(\"Assert Status Code To Be '200 OK'\");",
									"    pm.response.to.have.status(200);",
									"});",
									"// Expect NOT EMPTY Response",
									"pm.test(\"Expect User Courses List Not Empty\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody()).not.empty;",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7bbd6a84-b23c-4124-8fc7-f9fb0e11fb64",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/a1b62461.8ebb.4eac.8faa.4acfe270385d/{{coursesList}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"a1b62461.8ebb.4eac.8faa.4acfe270385d",
								"{{coursesList}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user course list data - 404 Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03305985-acb1-48e0-aaf1-dca6c4dca03e",
								"type": "text/javascript",
								"exec": [
									"// Check for 404",
									"pm.test(\"Expect 404 Not Found\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(404)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(\"Courses Resource : \");",
									"        console.log(jsonBody);",
									"    }",
									"    else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(\"Unknown JSON:\");",
									"        console.log(jsonBody);",
									"    }",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7bbd6a84-b23c-4124-8fc7-f9fb0e11fb64",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/{{userIdInvalid}}/{{coursesList}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"{{userIdInvalid}}",
								"{{coursesList}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT course by user.id - 404 Not Found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e3dbae0f-c3ba-465d-89aa-2f8de086f903",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "75d45e25-2e95-4bc4-ac27-9cee0c38b632",
								"type": "text/javascript",
								"exec": [
									"// Check for 404",
									"pm.test(\"Expect 404 Not Found\", function () {",
									"    ",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(404)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(resObj);",
									"    } else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(resObj);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"b64c860dfff34a18\",\n    \"courseName\": \"GO Beginners\",\n    \"courseDetails\": \"A simple GO Beginners course\",\n    \"coursePrice\": 450\n}"
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/a1b62461.8ebb.4eac.8faa.4acfe270385d/add-course",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"a1b62461.8ebb.4eac.8faa.4acfe270385d",
								"add-course"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT course by user.id - 201 Ceated",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e3dbae0f-c3ba-465d-89aa-2f8de086f903",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bbf5c6dd-8380-4813-b769-6fba3375c258",
								"type": "text/javascript",
								"exec": [
									"// Check for 404",
									"pm.test(\"Expect 404 Not Found\", function () {",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(201)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(resObj);",
									"    } else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(resObj);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t \"id\": \"b64c860dfff34a18b40635faab92196a\",\n\t\"courseName\": \"Database\",\n\t\"courseDetails\": \"A simple Database course\",\n\t\"coursePrice\": 125\n}"
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{users}}/a1b62461.8ebb.4eac.8faa.4acfe270385d/add-course",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{users}}",
								"a1b62461.8ebb.4eac.8faa.4acfe270385d",
								"add-course"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Courses Resource",
			"description": null,
			"item": [
				{
					"name": "GET all courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f89c5799-fe1e-4397-9bb4-afe37bc81901",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect For 200 OK\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(200)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(\"Courses Resource : \");",
									"        console.log(jsonBody);",
									"    }",
									"    else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(\"Unknown JSON:\");",
									"        console.log(jsonBody);",
									"    }",
									"});",
									"// Expect NOT EMPTY Response",
									"pm.test(\"Expect Courses In Response\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var courses = jsonBody;",
									"    if (pm.expect(courses.length).to.be.not.equals(0)) { ",
									"        console.log(\"LENGTH : \" + courses.length);",
									"        console.log(courses);",
									"    } else {",
									"        console.log(\"FAIL : \" + courses.length);",
									"        console.log(jsonBody);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{courses}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{courses}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET course by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "328b8d84-cfa2-4bc9-a166-13d57598036f",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect For 200 OK\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(200)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(\"Course Resource : \");",
									"        console.log(jsonBody);",
									"    }",
									"    else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(\"Unknown JSON:\");",
									"        console.log(jsonBody);",
									"    }",
									"});",
									"// Expect NOT EMPTY Response",
									"pm.test(\"Expect Courses In Response\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var course = jsonBody;",
									"    if (pm.expect(course).to.be.not.equals(0)) { ",
									"        console.log(\"PASS : \" + course.id);",
									"        console.log(course);",
									"    } else {",
									"        console.log(\"FAIL : \" + course.id);",
									"        console.log(jsonBody);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{courses}}/5f9c1088fbd1454b9c35d3ef4d9c0c88",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{courses}}",
								"5f9c1088fbd1454b9c35d3ef4d9c0c88"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST add course",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "237d00b7-af13-483b-8226-897123d1bea5",
								"type": "text/javascript",
								"exec": [
									"// Check for 201",
									"pm.test(\"Expect For 201 OK\", function () {",
									"    var jsonBody = JSON.parse(responseBody);",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(201)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"        console.log(\"Courses Resource : \");",
									"        console.log(jsonBody);",
									"    }",
									"    else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"        console.log(\"Unknown JSON:\");",
									"        console.log(jsonBody);",
									"    }",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"courseName\": \"GO Beginners\",\n    \"courseDetails\": \"A simple GO Beginners course\",\n    \"coursePrice\": 450\n}"
						},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{courses}}",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{courses}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE course by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaf3f123-4611-445b-bfab-272c4ebdac20",
								"type": "text/javascript",
								"exec": [
									"// Check for 200",
									"pm.test(\"Expect For 200 OK\", function () {",
									"    var resObj = pm.response;",
									"    if (pm.expect(resObj).to.have.status(200)) {",
									"        console.log(\"PASS : \" + resObj.code);",
									"    }",
									"    else {",
									"        console.log(\"FAIL : \" + resObj.code);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://{{baseURI}}/{{baseAPI}}/{{courses}}/5afdb41cf9c8f8417c2bdff0",
							"protocol": "http",
							"host": [
								"{{baseURI}}"
							],
							"path": [
								"{{baseAPI}}",
								"{{courses}}",
								"5afdb41cf9c8f8417c2bdff0"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a3edd293-ead1-4a30-9192-69f16c06cf0d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "00e439d0-457a-4ec3-9653-34b49c27ed90",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "47d03d13-01e5-4eb9-8311-4f02f96507e6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "27a64678-408e-43d2-8fd4-8740a944991e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}